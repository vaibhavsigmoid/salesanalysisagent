data_loader_task:
  description: "Analyze the provided file and identify its format (CSV, Parquet, Excel). If Excel, list all sheet names.Validate and load the file into a DataFrame Generate the appropriate ingestion code using pandas."
  expected_output: "A pandas DataFrame or an error message if the file is invalid."
  agent: data_loader

inspect_task:
  description: "Inspect the provided sales data and provide schema and data preview."
  expected_output: "A preview of the first few rows and schema information."
  agent: inspector

schema_mapping_task:
  description: "Map the schema of the provided data to a unified schema format."
  expected_output: "A dataframe with a unified schema."
  agent: schema_mapper

schema_validator_task:
  description: "check the source schema with target schema and suggest code changes."
  expected_output: 'based on the differnce in schema and different in data, generate if source has new column add suggest a sql code to add column, if column type or data is mismatched suggest sql code to alter target column type, if not required write a python function using pandas and mysql-connector-python libaray to cast column type to target. make sure during the process there is no data loss or trunction of any kind. Also make sure that no historical data is dropped in a process. code should not have any example, or instruction on how to execute it. execute the generated code and write the output to a file'

  agent: schema_validator
  output_file: schema_validator_task.py

clean_validate_task:
  description: "Clean and validate the mapped sales data."
  expected_output: "A cleaned and validated dataframe."
  agent: cleaner_validator

code_gen_task:
  description: "Generate Python code to process the sales data."
  expected_output: "Executable Python code (ETL pipeline) for processing the cleaned data."
  agent: code_generator

data_format_check_task:
  description: "compare source dataframe with target dataframe and find the data format difference between them and suggest the code change"
  expected_output: "Python function fix_data_format_change with proper argumets to parse and convert source data to match target format for ingesting new data into existing table, all the new data coming in file has to be appened to table without dropping any data in table, code should not have any example, or instruction on how to execute it."
  agent: data_format_validator
  output_file: data_format_check_task.json
